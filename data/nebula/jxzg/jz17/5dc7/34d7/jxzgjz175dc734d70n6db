{"data":{"java":"File root = BotBase.getBot(\"nebula\").getRootDir();\nFile f = new File(root, \"networks\");\nf = new File(f, servicename);\nFile f2 = new File(f, \"connection.json\");\nJSONObject jo = new JSONObject(new String(BotUtil.readFile(f2)));\n\nString shm = \"\";\nString hosts = \"\";\nJSONObject lhs = jo.getJSONObject(\"lighthouses\");\nIterator i = lhs.keys();\nwhile (i.hasNext()){\n  String peer = (String)i.next();\n  JSONObject lh = lhs.getJSONObject(peer);\n  shm += \"  \\\"\"+lh.get(\"private_ip\")+\"\\\": [\\\"\"+lh.get(\"public_ip\")+\":\"+lh.get(\"port\")+\"\\\"]\\n\";\n  hosts += \"    - \\\"\"+lh.get(\"private_ip\")+\"\\\"\\n\";\n}\n\nString path = f.getCanonicalPath();\nString s = \"pki:\\n  ca: \"+path+\"/ca.crt\\n  cert: \"+path+\"/host.crt\\n  key: \"+path+\"/host.key\\nstatic_host_map:\\n\"+shm+\"lighthouse:\\n  am_lighthouse: \"+jo.getBoolean(\"am_lighthouse\")+\"\\n  interval: 60\\n  hosts:\\n\"+hosts+\"listen:\\n  host: \"+jo.getString(\"host\")+\"\\n  port: \"+jo.getInt(\"port\")+\"\\npunchy: true\\ntun:\\n  dev: \"+servicename+\"\\n  drop_local_broadcast: false\\n  drop_multicast: false\\n  tx_queue: 500\\n  mtu: 1300\\n  routes:\\n  unsafe_routes:\\nlogging:\\n  level: info\\n  format: text\\nfirewall:\\n  conntrack:\\n    tcp_timeout: 120h\\n    udp_timeout: 3m\\n    default_timeout: 10m\\n    max_connections: 100000\\n  outbound:\\n    - port: any\\n      proto: any\\n      host: any\\n  inbound:\\n    - port: any\\n      proto: icmp\\n      host: any\\n    - port: any\\n      proto: tcp\\n      host: any \\n\";\n\n//File f3 = new File(f, \"test.yml\");\n//BotUtil.writeFile(f3, s.getBytes());  \n\nreturn s;","import":"import org.json.*;\nimport com.newbound.robot.*;\nimport java.io.*;\nimport java.util.*;\n","returntype":"String","params":[{"name":"servicename","type":"String"}],"desc":""},"id":"jxzgjz175dc734d70n6db","sessionid":"jvgvwg16b7a4d277bt3","time":1605724477040,"addr":"/0:0:0:0:0:0:0:1:33324","username":"admin"}