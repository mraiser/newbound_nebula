{"data":{"css":".mdl-layout__drawer-button{\n  padding-top:12px;\n  height:40px;\n}\n\n.mainbg, .padme{\n  padding: 20px;\n}\n\n.installupdatebutton, .installappremotely, .installednetworks, .rebootpeerbutton, .networkpage{\n  display: none;\n}\n\n.mainbg .mdl-button--accent.mdl-button--accent.mdl-button--raised.networkbutton{\n  color:white;\n}\n\n.transparent-header, .transparent-header .mdl-layout__tab-bar{\n  background-color:white;\n}\n\n.yamltext{\n  width:800px;\n}\n\n.raw-yaml{\n  display:none;\n}\n\n.lighthouse_peer, .member_peer{\n  font-size:xx-small;\n}\n\n.lhpopup {\n  width: 340px;\n  height:400px;\n}\n\n.nwpopup {\n  width: 340px;\n  height:366px;\n}\n\n.mbpopup {\n  width: 340px;\n  height:350px;\n}\n\n.lhcontent, .nwcontent, .mbcontent {\n  padding:20px;\n}\n\n.networklistbutton{\n  margin-bottom: 20px;\n}\n\n.saveconfigbutton{\n  margin-left:20px;\n}","data":[],"name":"nebula","js":"var me = this; \nvar ME = $('#'+me.UUID)[0];\n\nme.ready = function(){\n  componentHandler.upgradeAllRegistered();\n\n  me.peer = ME.DATA.peer;\n  json('../peerbot/getpeerinfo', null, function(result){\n    me.mypeerid = result.id;\n    me.mypeername = result.name;\n    var d = {\n      \"local\": true,\n      \"connectedonly\": true,\n      \"ready\": rebuild,\n      \"cb\": function(val){\n        var b = val == 'local'\n        if (b) me.peer = null;\n        else me.peer = val;\n        $(ME).find('.localonly').css('display', b  ? 'inline-block' : 'none');\n        rebuild();\n      }\n    };\n    installControl($(ME).find('.whichpeer')[0], 'peerbot', 'selectpeer', function(api){}, d);\n  });\n};\n\n$(document).click(function(event) {\n   window.lastElementClicked = event.target;\n});\n\nfunction extractLightHouse(peer, el){\n  var d = {};\n  el = $(el).parent().next();\n  d.private_ip = el.text();\n  el = el.next();\n  d.public_ip = el.text();\n  el = el.next();\n  d.port = Number(el.text());\n  return d;\n}\n\nfunction extractLightHouses(){\n  var lh = {};\n  var els = $(ME).find('.lighthouse_peer');\n  var n = els.length;\n  for (var i=0;i<n;i++){\n    var el = els[i];\n    var peer = $(el).html();\n    lh[peer] = extractLightHouse(peer, el);\n  }\n  return lh;\n}\n\n$(ME).find('.saveconfigbutton').click(function(e){\n  var lh = extractLightHouses();\n  var d = {};\n  d.host = $(ME).find('.networkhost').val();\n  d.subnet = $(ME).find('.networksubnet').val();\n  d.ip_address = $(ME).find('.networkipaddr').val();\n  d.port = $(ME).find('.networkport').val();\n  d.groups = $(ME).find('.networkgroups').val();\n  d.am_lighthouse = $(ME).find('.lighthousecheckbox').prop(\"checked\");\n  d.lighthouses = lh;\n  d.use_yaml = $(ME).find('.yaml-checkbox').prop(\"checked\");\n  if (d.use_yaml) d.yaml = $(ME).find('.config-yml').val();\n  send_save_config(me.selectednetwork.name, d, function(result){\n    alert(JSON.stringify(result));\n  }, me.peer);\n});\n\n$(ME).find('.yaml-checkbox ').change(function(e){\n  $(ME).find('.raw-yaml').css('display', $(this).prop('checked') ? 'block' : 'none');\n});\n\n$(ME).find('.refreshversion').click(rebuild);\n\n$(ME).find('.installappbutton').click(function(e){\n  $(this).css('display', 'none');\n  var d = \"peer=\"+me.mypeerid+\"&lib=nebula&guid=\"+me.UUID;\n  json(\"../peerbot/remote/\"+me.peer+\"/metabot/installlib\", d, function(result){\n    d = \"classname=com.newbound.robot.published.Nebula\";\n    json(\"../peerbot/remote/\"+me.peer+\"/metabot/activate\", d, function(result){\n      $(ME).find('.rebootpeerbutton').css('display', 'block');\n      $(ME).find('.nebulaversion').html('The remote Newbound service will need to be restarted for the Nebula app to activate.');\n    });\n  });\n});\n\nme.wscb = function(msg){\n  console.log(\"WSCB\");\n  console.log(msg);\n};\n\n$(ME).find('.rebootpeerbutton').click(function(e){\n  json('../peerbot/remote/'+me.peer+'/metabot/call', 'db=metabot&name=rebootbutton&cmd=reboot&args={}', function(result){\n    alert(JSON.stringify(result));\n  });\n});\n\n$(ME).find('.installupdatebutton').click(function(e){\n  $(this).css('display', 'none');\n  var url = $(ME).find('.downloadselect').find('select').val();\n  var el = $(ME).find('.updatemsg').find('select');\n  var version = el[0].options[el[0].selectedIndex].text;\n  send_install_release(url, version, function(result){\n    alert(result.msg);\n    $(ME).find('.installupdatebutton').css('display', 'block');\n    rebuild();\n  }, me.peer);\n});\n\n$(ME).find('.checkupdatebutton').click(function(e){\n  $(this).css('display', 'none');\n  $(ME).find('.updatemsg').html('<i>checking for update...<\/i>');\n  $.getJSON('https://api.github.com/repos/slackhq/nebula/releases', function(result){\n    me.releases = {};\n    for (var i in result){\n      var r = result[i];\n      var tag = r.tag_name;\n      var id = r.id;\n      me.releases[id] = r;\n    }\n    var d = {\n      \"list\": result,\n      \"label\": \"Select Version\",\n      \"cb\": selectVersion\n    };\n    installControl($(ME).find('.updatemsg')[0], 'metabot', 'select', function(api){\n      selectVersion(result[0].id);\n    }, d);\n  });\n});\n\nfunction nextIPAddress(){\n  var n = Object.keys(me.members).length+1;\n  var ip_address = $(ME).find('#networksubnet').val();\n  var i = ip_address.indexOf('X');\n  ip_address = ip_address.substring(0,i)+n+ip_address.substring(i+1);\n  return ip_address;\n}\n\n$(ME).find('.addmemberbutton').click(function(e){\n  var val = {\n    \"ip_address\": nextIPAddress(),\n    \"groups\": \"\",\n    \"peer\": null\n  };\n  popupCredentials(val);\n});\n  \nfunction popupCredentials(val){\n  var d = {};\n  var button = this;\n  \n  d.cb = function(api){\n    var content = el.find('.mbcontent');\n    var d2 = {\n      close: function(){\n        d.popupapi.closeAndReset();\n      },\n      save: function(data){\n        d.popupapi.closeAndReset();\n        var servicename = me.selectednetwork.name;\n        var target = d2.value.peer;\n        var subnet = $(ME).find('#networksubnet').val();\n        var ipaddress = d2.value.ip_address;\n        var port = $(ME).find('.networkport').val();\n        var owner = me.peer ? me.peer : me.mypeerid;\n        var groups = d2.value.groups;\n        send_add_member(servicename, target, ipaddress, groups, function(result){\n          if (result.status != 'ok') alert(result.msg);\n          else {\n            var ca_crt = result.data.ca_crt;\n            var host_crt = result.data.host_crt;\n            var host_key = result.data.host_key;\n            var lh = extractLightHouses();\n            send_join_network(servicename, subnet, ipaddress, port, owner, ca_crt, host_crt, host_key, lh, groups, function(result){\n              selectNetwork(me.selectednetwork.name);\n              alert(JSON.stringify(result));\n            }, target);\n          }\n        }, me.peer);\n      }\n    };\n    d2.value = val;\n    installControl(content[0], 'nebula', 'member', function(api){}, d2);\n  };\n  var el = $(ME).find('.mbpopup');\n  installControl(el[0], 'metabot', 'popupdialog', function(api){\n    d.popupapi = api;\n  }, d);\n}\n\n$(ME).find('.addnetworkbutton').click(function(e){\n  var d = {};\n  var button = this;\n  \n  d.cb = function(api){\n    var content = el.find('.nwcontent');\n    var d2 = {\n      close: function(){\n        d.popupapi.closeAndReset();\n      },\n      save: function(data){\n        d.popupapi.closeAndReset();\n        send_create_network(d2.value.name, d2.value.subnet, d2.value.port, function(result){\n          rebuild();\n        }, me.peer);\n      }\n    };\n    var n = Object.keys(me.networks).length;\n    d2.value = {\n      \"subnet\": \"192.168.10\"+(n++)+\".X/24\",\n      \"name\": \"nebula\"+(n++),\n      \"port\": \"424\"+n\n    };\n    installControl(content[0], 'nebula', 'network', function(api){}, d2);\n  };\n  var el = $(ME).find('.nwpopup');\n  installControl(el[0], 'metabot', 'popupdialog', function(api){\n    d.popupapi = api;\n  }, d);\n});\n\n$(ME).find('.addlighthousebutton').click(function(e){\n  editLightHouse(null);\n});\n\nfunction editLightHouse(e){\n  var d = {};\n  var button = this;\n      \n  d.cb = function(api){\n    var content = el.find('.lhcontent');\n    var d2 = {\n      close: function(){\n        d.popupapi.closeAndReset();\n      },\n      save: function(data){\n        d.popupapi.closeAndReset();\n        var lh = extractLightHouses();\n        if (lh[data.peer]) {\n          lh = lh[data.peer];\n          var row = $(ME).find('.lhrow_'+data.peer);\n          var tds = row.find('td');\n          $(tds[1]).text(data.private_ip);\n          $(tds[2]).text(data.public_ip);\n          $(tds[3]).text(data.port);\n        }\n        else {\n          var newhtml = $(buildLHRow(data.peer, data));\n          newhtml.find('.editlighthousebutton').click(editLightHouse);\n          newhtml.find('.deletelighthousebutton').click(deleteLightHouse);\n          $(ME).find('.selectednetworklighthouses').find('tbody').append(newhtml);\n          componentHandler.upgradeAllRegistered();\n        }\n      }\n    };\n    if (e){\n      var lh = $(button).closest('tr').find('.lighthouse_peer')[0];\n      var peer = $(lh).text();\n      d2.value = extractLightHouse(peer, lh);\n      d2.value.peer = peer;\n    }\n    installControl(content[0], 'nebula', 'lighthouse', function(api){}, d2);\n  };\n  var el = $(ME).find('.lhpopup');\n  installControl(el[0], 'metabot', 'popupdialog', function(api){\n    d.popupapi = api;\n  }, d);\n}\n\nfunction deleteLightHouse(e){\n  $(this).closest('tr').remove();\n}\n\nfunction installService(){\n  send_install_service(me.selectednetwork.name, function(result){\n    $(ME).find('.networkservicespan').html('<button class=\"toggleservicebutton mdl-button mdl-js-button mdl-button--icon mdl-button--colored\"><i class=\"material-icons\">toggle_on<\/i><\/button> Service: true').click(uninstallService);\n    alert(JSON.stringify(result));\n  }, me.peer);\n}\n\nfunction uninstallService(){\n  send_uninstall_service(me.selectednetwork.name, function(result){\n    $(ME).find('.networkservicespan').html('<button class=\"toggleservicebutton mdl-button mdl-js-button mdl-button--icon mdl-button--accent\"><i class=\"material-icons\">toggle_off<\/i><\/button> Service: false').click(installService);\n    alert(JSON.stringify(result));\n  }, me.peer);\n}\n\nfunction startService(){\n  send_start_service(me.selectednetwork.name, function(result){\n    $(ME).find('.networkrunningspan').html('<button class=\"togglerunningbutton mdl-button mdl-js-button mdl-button--icon mdl-button--colored\"><i class=\"material-icons\">toggle_on<\/i><\/button> Running: true').click(stopService);\n    alert(JSON.stringify(result));\n  }, me.peer);\n}\n\nfunction stopService(){\n  send_stop_service(me.selectednetwork.name, function(result){\n    $(ME).find('.networkrunningspan').html('<button class=\"togglerunningbutton mdl-button mdl-js-button mdl-button--icon mdl-button--accent\"><i class=\"material-icons\">toggle_off<\/i><\/button> Running: false').click(startService);\n    alert(JSON.stringify(result));\n  }, me.peer);\n}\n\nfunction selectNetwork(name){\n  var rdn = me.networks[name];\n  me.selectednetwork = rdn;\n  $(ME).find('.selectednetworkname').text(name);\n  var ownername = document.peers[rdn.owner] ? document.peers[rdn.owner].name : rdn.owner == me.mypeerid ? me.mypeername : rdn.owner;\n  var peername = document.peers[me.peer] ? document.peers[me.peer].name : me.peer == null ? 'local' : me.peer;\n  $(ME).find('.networkownerspan').text('Owner: '+ownername);\n  $(ME).find('.selectedpeername').text(peername);\n  var newhtml = '<button class=\"toggleservicebutton mdl-button mdl-js-button mdl-button--icon mdl-button--'+(rdn.service ? \"colored\" : \"accent\")+'\"><i class=\"material-icons\">toggle_'+(rdn.service ? \"on\" : \"off\")+'<\/i><\/button> Service: '+rdn.service;\n  $(ME).find('.networkservicespan').html(newhtml).find('.toggleservicebutton').click(function(e){\n    if (rdn.service) uninstallService();\n    else installService();\n  });\n  newhtml = '<button class=\"togglerunningbutton mdl-button mdl-js-button mdl-button--icon mdl-button--'+(rdn.running ? \"colored\" : \"accent\")+'\"><i class=\"material-icons\">toggle_'+(rdn.running ? \"on\" : \"off\")+'<\/i><\/button> Running: '+rdn.running;\n  $(ME).find('.networkrunningspan').html(newhtml).find('.togglerunningbutton').click(function(e){\n    if (rdn.running) stopService();\n    else startService();\n  });\n  $(ME).find('.lighthousecheckbox').prop('checked', rdn.config.am_lighthouse).parent()[0].MaterialCheckbox.updateClasses_();\n  $(ME).find('.yaml-checkbox').prop('checked', rdn.config.use_yaml).parent()[0].MaterialCheckbox.updateClasses_();\n  $(ME).find('.networkhost').val(rdn.config.host).parent().addClass('is-dirty');\n  $(ME).find('.networksubnet').val(rdn.config.subnet).parent().addClass('is-dirty');\n  $(ME).find('.networkipaddr').val(rdn.config.ip_address).parent().addClass('is-dirty');\n  $(ME).find('.networkport').val(rdn.config.port).parent().addClass('is-dirty');\n  $(ME).find('.networkgroups').val(rdn.config.groups).parent().addClass('is-dirty');\n  $(ME).find('.config-yml').val(rdn.config.yaml).parent().addClass('is-dirty');\n  $(ME).find('.raw-yaml').css('display', rdn.config.use_yaml ? 'block' : 'none');\n  \n  newhtml = '<table class=\"mdl-data-table mdl-js-data-table mdl-shadow--2dp\"><thead><tr><th class=\"mdl-data-table__cell--non-numeric\">Peer<\/th><th class=\"mdl-data-table__cell--non-numeric\">Private IP<\/th><th class=\"mdl-data-table__cell--non-numeric\">Public IP<\/th><th>Port<\/th><th class=\"mdl-data-table__cell--non-numeric\"><\/th><th class=\"mdl-data-table__cell--non-numeric\"><\/th><\/tr><\/thead><tbody>';\n  \n  for (var id in rdn.config.lighthouses){\n    var lh = rdn.config.lighthouses[id];\n    newhtml += buildLHRow(id, lh);\n  }\n  \n  newhtml += '<\/tbody><\/table>';\n  var el = $(ME).find('.selectednetworklighthouses');\n  el.html(newhtml);\n  el.find('.editlighthousebutton').click(editLightHouse);\n  el.find('.deletelighthousebutton').click(deleteLightHouse);\n  \n  send_members(name, function(result){\n    me.members = result.data;\n    newhtml = '<table class=\"mdl-data-table mdl-js-data-table mdl-shadow--2dp\"><thead><tr><th class=\"mdl-data-table__cell--non-numeric\">Peer<\/th><th class=\"mdl-data-table__cell--non-numeric\">Private IP<\/th><th class=\"mdl-data-table__cell--non-numeric\">groups<\/th><th class=\"mdl-data-table__cell--non-numeric\"><\/th><th class=\"mdl-data-table__cell--non-numeric\"><\/th><\/tr><\/thead><tbody>';\n    for (var id in result.data) if (result.data[id].ip_address){\n      var p = document.peers[id];\n      var name = p ? p.name + '<br><span class=\"member_peer\">'+id+'<\/span>' : id;\n      var ip = result.data[id].ip_address;\n      var groups = result.data[id].groups;\n      if (!groups) groups = '';\n      newhtml += '<tr class=\"memberrow_'+id+'\" data-peer=\"'+id+'\"><td class=\"mdl-data-table__cell--non-numeric\">'+name+'<\/td><td class=\"mdl-data-table__cell--non-numeric\">'+ip+'<\/td><td class=\"mdl-data-table__cell--non-numeric\">'+groups+'<\/td><td class=\"mdl-data-table__cell--non-numeric\"><button class=\"updatememberbutton mdl-button mdl-js-button mdl-button--icon\"><i class=\"material-icons\">update<\/i><\/button><\/td><td class=\"mdl-data-table__cell--non-numeric\"><button class=\"deletememberbutton mdl-button mdl-js-button mdl-button--icon\"><i class=\"material-icons\">delete<\/i><\/button><\/td><\/tr>';\n    }\n    newhtml += '<\/tbody><\/table>';\n    var el = $(ME).find('.selectednetworkmembers');\n    el.html(newhtml);\n    el.find('.updatememberbutton').click(updateMember);\n    el.find('.deletememberbutton').click(deleteMember);\n  }, me.peer);\n}\n\nfunction updateMember(e){\n  var td = $(this).parent().prev();\n  var groups = td.text();\n  td = td.prev();\n  var ip_address = td.text();\n  var peer = td.parent().data('peer');\n  var val = {\n    \"ip_address\": ip_address,\n    \"groups\": groups,\n    \"peer\": peer\n  };\n  popupCredentials(val);\n}\n\nfunction deleteMember(e){\n  alert('deleteMember');\n}\n\nfunction buildLHRow(id, lh){\n    var p = document.peers[id];\n    var name = p ? p.name + '<br><span class=\"lighthouse_peer\">'+id+'<\/span>' : id;\n    return '<tr class=\"lhrow_'+id+'\"><td class=\"mdl-data-table__cell--non-numeric\">'+name+'<\/td><td class=\"mdl-data-table__cell--non-numeric\">'+lh.private_ip+'<\/td><td class=\"mdl-data-table__cell--non-numeric\">'+lh.public_ip+'<\/td><td>'+lh.port+'<\/td><td class=\"mdl-data-table__cell--non-numeric\"><button class=\"editlighthousebutton mdl-button mdl-js-button mdl-button--icon mdl-button--colored\"><i class=\"material-icons\">edit<\/i><\/button><\/td><td class=\"mdl-data-table__cell--non-numeric\"><button class=\"deletelighthousebutton mdl-button mdl-js-button mdl-button--icon\"><i class=\"material-icons\">delete<\/i><\/button><\/td><\/tr>';\n}\n\nfunction checkNetworks(result){\n  me.networks = {};\n  $(ME).find('.installednetworks').css('display', 'block');\n  if (result.data.networks && result.data.networks.length > 0){\n    var newhtml = '';\n    for (var i in result.data.networks){\n      var rdn = result.data.networks[i];\n      me.networks[rdn.name] = rdn;\n      var owner = rdn.owner == 'local' ? 'local' : document.peers[rdn.owner] ? document.peers[rdn.owner].name : rdn.owner == me.mypeerid ? me.mypeername : rdn.owner;\n      newhtml += ' <button data-service=\"'+rdn.name+'\" class=\"networklistbutton mdl-button mdl-js-button mdl-button--raised mdl-button--'+(rdn.running ? 'colored' : 'accent')+' networkbutton\">'+rdn.name+' ('+owner+')<\/button>';\n      newhtml += '<br>';\n    }\n    $(ME).find('.foundnetworks').html(newhtml).find('button').click(function(e){\n      $(ME).find('.homepage').css('display', 'none');\n      $(ME).find('.networkpage').css('display', 'block');\n      var name = $(this).data('service');\n      selectNetwork(name);\n    });\n  }\n  else $(ME).find('.foundnetworks').html('<i>No networks<\/i>');\n}\n\nfunction rebuild(){\n  $(ME).find('.nebulaversion').html('<i>Checking remote peer...<\/i>');\n  $(ME).find('.releasemanagement').css('display', 'none');\n  $(ME).find('.installappremotely').css('display', 'none');\n  $(ME).find('.installednetworks').css('display', 'none');\n  send_info(function(result){\n    if (result.data) {\n      $(ME).find('.nebulaversion').html(result.data.tag_name+\" \"+result.data.binary_name);\n      $(ME).find('.releasemanagement').css('display', 'block');\n      $(ME).find('.installappremotely').css('display', 'none');\n      checkNetworks(result);\n    }\n    else {\n      $(ME).find('.nebulaversion').html('The Newbound Nebula app is not running on this peer');\n      $(ME).find('.releasemanagement').css('display', 'none');\n      $(ME).find('.installappremotely').css('display', 'block');\n      $(ME).find('.installednetworks').css('display', 'none');\n    }\n  }, me.peer);\n}\n\nfunction selectVersion(val){\n  var r = me.releases[val];\n  var binaries = [];\n  for (var i in r.assets){\n    var o = r.assets[i];\n    if (o.name.startsWith('nebula-')){\n      var d = {\n        \"name\": o.name.substring(7, o.name.length - 7),\n        \"id\": o.browser_download_url\n      };\n      binaries.push(d);\n    }\n  }\n  var d = {\n    \"list\": binaries,\n    \"label\": \"Select Binary\"\n  };\n  installControl($(ME).find('.downloadselect')[0], 'metabot', 'select', function(api){\n    $(ME).find('.installupdatebutton').css('display', 'block');\n  }, d);\n}","groups":"anonymous","ctl":"tjsusx175c2953d7ct1109","html":"<div class=\"homepage mdl-layout mdl-js-layout mdl-layout--fixed-header mdl-layout--fixed-tabs\">\n  <header class=\"mdl-layout__header\">\n    <div aria-expanded=\"false\" role=\"button\" tabindex=\"0\" class=\"mdl-layout__drawer-button\" onclick=\"document.location.href='../botmanager/index.html';\"><i class=\"material-icons\">menu<\/i><\/div>\n    <div class=\"mdl-layout__header-row\">\n      <span class=\"mdl-layout-title\">Nebula<\/span>\n    <\/div>\n  <\/header>\n  <main class=\"mdl-layout__content mainbg\">\n    <div class='whichpeer'><\/div>\n    <div>\n      Installed Version:\n      <span class='nebulaversion'><i>checking...<\/i><\/span>\n      <button class=\"refreshversion mdl-button mdl-js-button mdl-button--icon mdl-button--colored\">\n        <i class=\"material-icons\">refresh<\/i>\n      <\/button>      \n    <\/div>\n    <div class=\"releasemanagement\">\n      <button class=\"checkupdatebutton mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--colored\">\n        Check for update\n      <\/button>\n      <div class='updatemsg'><\/div>\n      <div class='downloadselect'><\/div>\n      <button class=\"installupdatebutton mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--colored\">\n        Install\n      <\/button>\n    <\/div>\n    <div class=\"installappremotely\">\n      <button class=\"installappbutton mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--colored\">\n        Install App\n      <\/button>\n      <button class=\"rebootpeerbutton mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--colored\">\n        Reboot Device\n      <\/button>\n    <\/div>\n    <div class=\"installednetworks\">\n      <h3>\n        <button class=\"addnetworkbutton mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-button--colored\">\n          <i class=\"material-icons\">add<\/i>\n        <\/button>\n        Networks\n      <\/h3>\n      <div class=\"foundnetworks\"><\/div>\n    <\/div>\n  <\/main>\n<\/div>\n<div class=\"networkpage mdl-layout mdl-js-layout mdl-layout--fixed-header mdl-layout--fixed-tabs\">\n  <header class=\"mdl-layout__header\">\n    <div aria-expanded=\"false\" role=\"button\" tabindex=\"0\" class=\"mdl-layout__drawer-button\" onclick=\"$(this).closest('.networkpage').css('display', 'none').parent().parent().find('.homepage').css('display', 'block');\"><i class=\"material-icons\">arrow_back<\/i><\/div>\n    <div class=\"mdl-layout__header-row\">\n      <span class=\"mdl-layout-title\">Nebula / <span class=\"selectedpeername\">local<\/span> / <span class=\"selectednetworkname\"><\/span><\/span>\n    <\/div>\n    <div class=\"mdl-layout__tab-bar mdl-js-ripple-effect\">\n      <a href=\"#scroll-tab-1\" class=\"mdl-layout__tab is-active\">Service<\/a>\n      <a href=\"#scroll-tab-2\" class=\"mdl-layout__tab\">Lighthouses<\/a>\n      <a href=\"#scroll-tab-3\" class=\"localonly mdl-layout__tab\">Members<\/a>\n      <a href=\"#scroll-tab-4\" class=\"mdl-layout__tab\">Advanced<\/a>\n    <\/div>\n  <\/header>\n  <main class=\"mdl-layout__content\">\n    <section class=\"mdl-layout__tab-panel is-active\" id=\"scroll-tab-1\">\n      <div class=\"page-content\">\n        <div class='padme'>    \n          <h4 class='networkownerspan'><\/h4>\n          <div class='networkservicespan'><\/div>\n          <div class='networkrunningspan'><\/div>\n          <br>\n          <label class=\"mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect\" for=\"checkbox-2\">\n            <input type=\"checkbox\" id=\"checkbox-2\" class=\"lighthousecheckbox mdl-checkbox__input\">\n            <span class=\"mdl-checkbox__label\">Am Lighthouse<\/span>\n          <\/label>\n          <form action=\"#\">\n            <div class=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n              <input class=\"networkhost mdl-textfield__input\" type=\"text\" id=\"sample3\">\n              <label class=\"mdl-textfield__label\" for=\"sample3\">Host<\/label>\n            <\/div>\n          <\/form>\n          <form action=\"#\">\n            <div class=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n              <input class=\"networksubnet mdl-textfield__input\" type=\"text\" id=\"networksubnet\">\n              <label class=\"mdl-textfield__label\" for=\"networksubnet\">Private Subnet<\/label>\n            <\/div>\n          <\/form>\n          <form action=\"#\">\n            <div class=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n              <input class=\"networkipaddr mdl-textfield__input\" type=\"text\" id=\"networkipaddr\">\n              <label class=\"mdl-textfield__label\" for=\"networkipaddr\">Private IP Address<\/label>\n            <\/div>\n          <\/form>\n          <form action=\"#\">\n            <div class=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n              <input class=\"networkport mdl-textfield__input\" type=\"text\" pattern=\"-?[0-9]*(\\.[0-9]+)?\" id=\"sample4\">\n              <label class=\"mdl-textfield__label\" for=\"sample4\">Port<\/label>\n              <span class=\"mdl-textfield__error\">Port must be a number!<\/span>\n            <\/div>\n          <\/form>\n          <form action=\"#\">\n            <div class=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n              <input class=\"networkgroups mdl-textfield__input\" type=\"text\" id=\"networkgroups\">\n              <label class=\"mdl-textfield__label\" for=\"networkgroups\">Groups<\/label>\n            <\/div>\n          <\/form>\n        <\/div>\n        <div class='gep2'><\/div>\n      <\/div>\n    <\/section>\n    <section class=\"mdl-layout__tab-panel\" id=\"scroll-tab-2\">\n      <div class=\"page-content\">\n        <div class='padme'>    \n          <h4>\n            <button class=\"addlighthousebutton mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-button--colored\">\n              <i class=\"material-icons\">add<\/i>\n            <\/button>\n            Remote Lighthouses\n          <\/h4>\n          <div class='selectednetworklighthouses'><\/div>\n        <\/div>\n      <\/div>\n    <\/section>\n    <section class=\"mdl-layout__tab-panel\" id=\"scroll-tab-3\">\n      <div class=\"page-content\">\n        <div class='padme'>    \n          <h4>\n            <button class=\"addmemberbutton mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-button--colored\">\n              <i class=\"material-icons\">add<\/i>\n            <\/button>\n            Remote Members\n          <\/h4>\n          <div class=\"selectednetworkmembers\"><\/div>\n        <\/div>\n      <\/div>\n    <\/section>\n    <section class=\"mdl-layout__tab-panel\" id=\"scroll-tab-4\">\n      <div class=\"page-content\">\n        <div class='padme'>    \n          <label class=\"mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect\" for=\"checkbox-1\">\n            <input type=\"checkbox\" id=\"checkbox-1\" class=\"yaml-checkbox mdl-checkbox__input\">\n            <span class=\"mdl-checkbox__label\">Override settings in other tabs<\/span>\n          <\/label>\n          <form action=\"#\" class=\"raw-yaml\">\n            <div class=\"yamltext mdl-textfield mdl-js-textfield\">\n              <textarea class=\"config-yml mdl-textfield__input\" type=\"text\" rows= \"10\" id=\"sample5\" ><\/textarea>\n              <label class=\"mdl-textfield__label\" for=\"sample5\">RAW YAML<\/label>\n            <\/div>\n          <\/form>              \n        <\/div>\n      <\/div>\n    <\/section>\n    <button class=\"saveconfigbutton mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--colored\">\n      Save configuration\n    <\/button>\n  <\/main>\n<\/div>\n<div class='lhpopup'><div class='lhcontent'><\/div><\/div>\n<div class='nwpopup'><div class='nwcontent'><\/div><\/div>\n<div class='mbpopup'><div class='mbcontent'><\/div><\/div>\n","cmd":[{"java":"jipwuh175c2b058f9k13d6","name":"info","id":"pllxui175c2b05901t13d7"},{"java":"sxqlqo175c3205217x1f70","name":"install_release","id":"yzkoos175c320521dx1f71"},{"java":"pjqhji175cd56711fp1f37","name":"install_service","id":"sqvnyv175cd567122t1f38"},{"java":"lnxuup175cd64652cw20b3","name":"start_service","id":"npukkh175cd64652fs20b4"},{"java":"uqwusq175cd6843eao211f","name":"stop_service","id":"plwomg175cd6843edm2120"},{"java":"vmyxny175cd68c006h212f","name":"restart_service","id":"pyonlr175cd68c008y2130"},{"java":"pyyygq175cd6a5c6au215e","name":"uninstall_service","id":"gxkmul175cd6a5c72u215f"},{"java":"jokjoh175d13ed2bai2db","name":"save_config","id":"xmronx175d13ed2bdz2dc"},{"java":"gjoisy175d2bd91bdu2a29","name":"convert_legacy","id":"ryyiri175d2bd91c6k2a2a"},{"java":"jxzgjz175dc734d70n6db","name":"build_config","id":"xrnsvh175dc734d75w6dc"},{"java":"sogqym175ec29b146u1b72","name":"create_network","id":"hwiniz175ec29b14aw1b73"},{"java":"uvzqhl175f0884900x2c0","name":"members","id":"ioqjkn175f088490dz2c1"},{"java":"guomou175f62200a0v1dda","name":"join_network","id":"kzlsuk175f62200a6x1ddb"},{"java":"zsvkoo175f63a2045y2059","name":"add_member","id":"quhxtu175f63a2052v205a"}],"three":{"controls":[]},"db":"nebula","desc":""},"readers":["anonymous"],"id":"tjsusx175c2953d7ct1109","sessionid":"jvgvwg16b7a4d277bt3","time":1618944511585,"addr":"/0:0:0:0:0:0:0:1:35764","username":"admin"}